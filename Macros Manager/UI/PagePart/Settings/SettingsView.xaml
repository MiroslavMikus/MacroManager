<UserControl x:Class="Macros_Manager.UI.PagePart.Settings.SettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:controllers="clr-namespace:Macros_Manager.MacroController"
             xmlns:local="clr-namespace:Macros_Manager.UI.PagePart.Settings"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:validation="clr-namespace:Macros_Manager.UI.ValidationRules"
             xmlns:converters="clr-namespace:Macros_Manager.UI.Converters"
             xmlns:loopController="clr-namespace:Macros_Manager.MacroController.LoopController"
             mc:Ignorable="d" 
             d:DesignHeight="1000" d:DesignWidth="400">
    <UserControl.Resources>
        <ResourceDictionary>
            <local:StringToMacroControllerTypeConverter x:Key="MacroControllerTypeConverter"></local:StringToMacroControllerTypeConverter>
            <converters:InvertBoolean x:Key="InvertConverter"></converters:InvertBoolean>
            <converters:ObjectToTypeStringConverter x:Key="ObjectToTypeStringConverter"></converters:ObjectToTypeStringConverter>
            <Style x:Key="CardHeader" TargetType="{x:Type TextBlock}" >
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Margin" Value="20 10 10 10"></Setter>
            </Style>
            <Style x:Key="CardTextBlock" TargetType="{x:Type TextBlock}" >
                <Setter Property="Margin" Value="10"/>
                <Setter Property="VerticalAlignment" Value="Center"></Setter>
            </Style>
            <Style x:Key="CardTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}" >
                <Setter Property="Margin" Value="10 7 10 13"></Setter>
                <Setter Property="HorizontalContentAlignment" Value="Right"></Setter>
            </Style>
            <Style x:Key="Card" TargetType="{x:Type materialDesign:Card}" >
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Margin" Value="5"></Setter>
            </Style>
            <Style x:Key="NumberTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource CardTextBox}">
                <EventSetter Event="PreviewTextInput" Handler="NumberValidationTextBox"/>
                <EventSetter Event="PreviewKeyDown" Handler="UIElement_OnPreviewKeyDown"></EventSetter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>
    <ScrollViewer VerticalScrollBarVisibility="Auto">
        <StackPanel Orientation="Vertical" >


            <!--Node-->
            <materialDesign:Card Style="{StaticResource Card}">
                <StackPanel Orientation="Vertical">
                    <TextBlock Style="{StaticResource ResourceKey=CardHeader}">Node :</TextBlock>
                    <DockPanel LastChildFill="True">
                        <TextBlock Style="{StaticResource ResourceKey=CardTextBlock}" DockPanel.Dock="Left"><Run Text="Name :"/></TextBlock>
                        <TextBox DockPanel.Dock="Top" Style="{StaticResource CardTextBox}">
                            <Binding Path="Name" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validation:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                    </DockPanel>
                </StackPanel>
            </materialDesign:Card>

            <!--Controller-->
            <materialDesign:Card Style="{StaticResource Card}">
                <StackPanel Orientation="Vertical">
                    <TextBlock Style="{StaticResource CardHeader}">Controller :</TextBlock>
                    <DockPanel LastChildFill="True">
                        <TextBlock Style="{StaticResource CardTextBlock}" DockPanel.Dock="Left" Text="Controller Type :"/>
                        <ToggleButton x:Name="TgEnable" DockPanel.Dock="Right" Margin="10 0 10 0" />
                        <ComboBox ItemsSource="{Binding MController.Macro.Definition.PossibleTypes}"
                                  SelectedItem="{Binding ControllerType, Converter={StaticResource MacroControllerTypeConverter}, Delay=250, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  IsEnabled="{Binding IsChecked, ElementName=TgEnable}"
                                  DropDownClosed="ComboBox_OnDropDownClosed"
                                  HorizontalContentAlignment="Right"/>
                    </DockPanel>

                    <!--Controller Custom Settings -> Put to DateTemplate-->
                    <ContentPresenter x:Name="CpCustomSettings" Content="{Binding MController}">
                        <ContentPresenter.Resources>
                            <DataTemplate x:Name="DtLoopController" DataType="{x:Type loopController:LoopController}" >
                                <StackPanel Orientation="Vertical">
                                    <DockPanel LastChildFill="True">
                                        <TextBlock DockPanel.Dock="Left" Text="Repeat Inverval in Seconds :" Style="{StaticResource CardTextBlock}"/>
                                        <TextBox DockPanel.Dock="Right" Style="{StaticResource NumberTextBox}"
                                         Text="{Binding TimerInterval, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                            <TextBox.CommandBindings>
                                                <CommandBinding Command="Paste" CanExecute="CommandBinding_OnCanExecute"/>
                                            </TextBox.CommandBindings>
                                        </TextBox>
                                    </DockPanel>
                                    <Grid Margin="10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>

                                        <RadioButton Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" IsChecked="{Binding Infinite}"></RadioButton>
                                        <TextBlock Grid.Column="1" Grid.Row="0" Style="{StaticResource CardTextBlock}">Infiinte Loop</TextBlock>

                                        <RadioButton Grid.Column="0" Grid.Row="1" VerticalAlignment="Center" IsChecked="{Binding LoopCount}"></RadioButton>
                                        <TextBlock Grid.Column="1" Grid.Row="1" Style="{StaticResource CardTextBlock}">Loop Couter</TextBlock>
                                        <TextBox Grid.Column="2" Grid.Row="1" Style="{StaticResource NumberTextBox}" Text="{Binding LoopCounter}"></TextBox>

                                        <RadioButton Grid.Column="0" Grid.Row="2" VerticalAlignment="Center" IsChecked="{Binding LoopUntil}"></RadioButton>
                                        <TextBlock Grid.Column="1" Grid.Row="2" Style="{StaticResource CardTextBlock}">Loop until</TextBlock>
                                        <local:FutureDatePicker Grid.Column="2" Grid.Row="2"></local:FutureDatePicker>

                                    </Grid>
                                </StackPanel>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type controllers:SimpleMacroController}"/>
                        </ContentPresenter.Resources>
                    </ContentPresenter>

                    <Grid Margin="0 15 0 5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <Button Margin="3" Grid.Column="0" Background="LimeGreen" Command="{Binding MController.Activate}" BorderBrush="{x:Null}"
                            IsEnabled="{Binding MController.IsActive, Converter={StaticResource InvertConverter}}" Content="_Activate"/>
                        <Button Margin="3" Grid.Column="1" Background="Red" Command="{Binding MController.Stop}" BorderBrush="{x:Null}"
                            IsEnabled="{Binding MController.IsActive}" Content="_Stop"/>
                    </Grid>
                </StackPanel>
            </materialDesign:Card>

            <!--Description-->
            <materialDesign:Card Style="{StaticResource Card}">
                <StackPanel Orientation="Vertical">
                    <TextBlock DockPanel.Dock="Left" Style="{StaticResource CardHeader}">Description :</TextBlock>
                    <DockPanel >
                        <TextBlock Style="{StaticResource ResourceKey=CardTextBlock}" DockPanel.Dock="Left"><Run Text="Disable description editing :"/></TextBlock>
                        <ToggleButton HorizontalAlignment="Right" DockPanel.Dock="Right" Margin="10 0 10 0" IsChecked="{Binding Description.DisableEditing}" />
                    </DockPanel>
                    <DockPanel >
                        <TextBlock Style="{StaticResource ResourceKey=CardTextBlock}" DockPanel.Dock="Left"><Run Text="Disable auto-updating :"/></TextBlock>
                        <ToggleButton x:Name="TbDisableAutoUpdate" HorizontalAlignment="Right" DockPanel.Dock="Right" Margin="10 0 10 0" 
                                      IsChecked="{Binding Description.DisableAutoUpdate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </DockPanel>
                    <DockPanel IsEnabled="{Binding ElementName=TbDisableAutoUpdate, Path=IsChecked, Converter={StaticResource InvertConverter}}">
                        <TextBlock Style="{StaticResource ResourceKey=CardTextBlock}" DockPanel.Dock="Left"><Run Text="Auto-Updating interval in seconds :"/></TextBlock>
                        <TextBox DockPanel.Dock="Right" 
                                 Style="{StaticResource NumberTextBox}"
                                 Text="{Binding Description.RefreshInterval, Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged, Delay=300}"/>
                    </DockPanel>
                </StackPanel>
            </materialDesign:Card>
        </StackPanel>
    </ScrollViewer>
</UserControl>
