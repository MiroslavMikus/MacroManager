<UserControl x:Class="Macros_Manager.UI.PagePart.Settings.SettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:controllers="clr-namespace:Macros_Manager.MacroController"
             xmlns:local="clr-namespace:Macros_Manager.UI.PagePart.Settings"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:validation="clr-namespace:Macros_Manager.UI.ValidationRules"
             xmlns:converters="clr-namespace:Macros_Manager.UI.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="400">
    <UserControl.Resources>
        <ResourceDictionary>
            <local:StringToMacroControllerTypeConverter x:Key="MacroControllerTypeConverter"></local:StringToMacroControllerTypeConverter>
            <converters:InvertBoolean x:Key="InvertConverter"></converters:InvertBoolean>
            <converters:ObjectToTypeStringConverter x:Key="ObjectToTypeStringConverter"></converters:ObjectToTypeStringConverter>
        </ResourceDictionary>
    </UserControl.Resources>
    <StackPanel Orientation="Vertical">
        <materialDesign:Card Margin="5" Padding="5">
            <StackPanel Orientation="Vertical">
                <DockPanel LastChildFill="True">
                    <Label DockPanel.Dock="Left">Name :</Label>
                    <TextBox DockPanel.Dock="Top">
                        <TextBox.Text>
                            <Binding Path="Name" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validation:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </DockPanel>
            </StackPanel>
        </materialDesign:Card>

        <materialDesign:Card Margin="5" Padding="5">
            <materialDesign:Card.Content>
                <DockPanel LastChildFill="True">
                    <Label DockPanel.Dock="Left" Content="Controller Type :"/>
                    <ToggleButton x:Name="TgEnable" DockPanel.Dock="Right" Margin="10 0 10 0"></ToggleButton>
                    <ComboBox ItemsSource="{Binding MController.Macro.Definition.PossibleTypes}"
                                  SelectedItem="{Binding ControllerType,
                                                Converter={StaticResource MacroControllerTypeConverter}, Mode=TwoWay, 
                                                UpdateSourceTrigger=PropertyChanged, Delay=250}"
                                  IsEnabled="{Binding ElementName=TgEnable, Path=IsChecked}"
                                  DropDownClosed="ComboBox_OnDropDownClosed"/>
                </DockPanel>
            </materialDesign:Card.Content>
        </materialDesign:Card>

        <materialDesign:Card x:Name="SettingsCard" Margin="5" Padding="5" Content="{Binding MController}">
            <materialDesign:Card.Style>
                <Style TargetType="{x:Type materialDesign:Card}" >
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=SettingsCard, Path=Content, Converter={StaticResource ObjectToTypeStringConverter}}" 
                                     Value="SimpleMacroController">
                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </materialDesign:Card.Style>
            <materialDesign:Card.Resources>
                <DataTemplate DataType="{x:Type controllers:LoopController}">
                    <DockPanel LastChildFill="True">
                        <Label DockPanel.Dock="Left">Repeat Inverval in Seconds :</Label>
                        <TextBox DockPanel.Dock="Right" 
                                 PreviewTextInput="NumberValidationTextBox" 
                                 PreviewKeyDown="UIElement_OnPreviewKeyDown"
                                 Text="{Binding TimerInterval, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                            <TextBox.CommandBindings>
                                <CommandBinding Command="Paste" CanExecute="CommandBinding_OnCanExecute"></CommandBinding>
                            </TextBox.CommandBindings>
                        </TextBox>
                    </DockPanel>
                </DataTemplate>
                <DataTemplate DataType="{x:Type controllers:SimpleMacroController}">
                </DataTemplate>
            </materialDesign:Card.Resources>
        </materialDesign:Card>

        <materialDesign:Card Margin="5" Padding="5">
            <materialDesign:Card.Content>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <Button Margin="3" Grid.Column="0" Background="LimeGreen" Command="{Binding MController.Activate}" BorderBrush="{x:Null}"
                            IsEnabled="{Binding MController.IsActive , Converter={StaticResource InvertConverter}}">_Activate</Button>
                    <Button Margin="3" Grid.Column="1" Background="Red" Command="{Binding MController.Stop}" BorderBrush="{x:Null}"
                            IsEnabled="{Binding MController.IsActive}">_Stop</Button>
                </Grid>
            </materialDesign:Card.Content>
        </materialDesign:Card>

    </StackPanel>
</UserControl>
