<UserControl x:Class="Macros_Manager.UI.PagePart.NewNodeDialog.NewNodeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:validation="clr-namespace:Macros_Manager.UI.ValidationRules"
             xmlns:converters="clr-namespace:Macros_Manager.UI.Converters"
             xmlns:newNodeDialog="clr-namespace:Macros_Manager.UI.PagePart.NewNodeDialog"
             Width="400"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <newNodeDialog:NewNodeValueConverter x:Key="Converter"></newNodeDialog:NewNodeValueConverter>
            <converters:AreNotNullOrFalse x:Key="NotNullOrFalse"/>
            <converters:InvertBoolean x:Key="InvertBoolean"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Margin="16">
        <Grid Margin="16">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <TextBlock>New node:</TextBlock>
            <TextBox x:Name="NameTextBox"
                     Grid.Row="1" Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                     FontSize="15"
                     wpf:HintAssist.Hint="Name">
                <TextBox.Text>
                    <Binding RelativeSource="{RelativeSource Self}" Path="Text" UpdateSourceTrigger="LostFocus">
                        <Binding.ValidationRules>
                            <validation:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <ComboBox x:Name="Type" wpf:HintAssist.Hint="Type"           
                 Margin="0 6 0 0"
                 FontSize="15" Grid.Row="2"
                 ItemsSource="{Binding Types}"
                 DisplayMemberPath="Instance"
                 IsEnabled="{Binding ElementName=NameTextBox, Path=(Validation.HasError), Converter={StaticResource InvertBoolean}}">

            </ComboBox>
            <ComboBox x:Name="MacroController"
                 wpf:HintAssist.Hint="Macro Controller"
                 Margin="0 8 0 0"
                 FontSize="15" Grid.Row="3"
                 ItemsSource="{Binding ElementName=Type, Path=SelectedItem.PossibleTypes}">
                <!--IsEnabled="{Binding ElementName=Type, Path=SelectedItem.HasSubtype}">-->
                <ComboBox.IsEnabled>
                    <MultiBinding Converter="{StaticResource NotNullOrFalse}">
                        <Binding ElementName="Type" Path="SelectedItem.HasSubtype"/>
                        <Binding ElementName="Type" Path="SelectedItem"/>
                        <Binding ElementName="Type" Path="IsEnabled"/>
                    </MultiBinding>
                </ComboBox.IsEnabled>
            </ComboBox>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="4"
                    Margin="0 16 0 0">
                <Button IsCancel="True" Margin="8 0 0 0" Style="{DynamicResource MaterialDesignFlatButton}"
                    Command="{x:Static wpf:DialogHost.CloseDialogCommand}">
                    CANCEL
                </Button>
                <Button IsDefault="True" Style="{DynamicResource MaterialDesignFlatButton}"
                    Command="{x:Static wpf:DialogHost.CloseDialogCommand}" Content="OK">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource NotNullOrFalse}">
                            <Binding ElementName="Type" Path="SelectedItem"/>
                            <Binding ElementName="Type" Path="IsEnabled"/>
                        </MultiBinding>
                    </Button.IsEnabled>
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource Converter}"  UpdateSourceTrigger="Explicit"> <!--TODO if is Macrocontroller enabled and null, this button should be disabled-->
                            <Binding ElementName="Type" Path="SelectedValue.Instance"></Binding>
                            <Binding ElementName="SubType" Path="SelectedValue"></Binding>
                            <Binding ElementName="NameTextBox" Path="Text"></Binding>
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
